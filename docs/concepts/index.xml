<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Verrazzano Enterprise Container Platform â€“ Concepts</title>
    <link>/docs/concepts/</link>
    <description>Recent content in Concepts on Verrazzano Enterprise Container Platform</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/concepts/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Verrazzano and the Open Application Model</title>
      <link>/docs/concepts/verrazzanooam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/concepts/verrazzanooam/</guid>
      <description>
        
        
        &lt;p&gt;Open Application Model (OAM) is a runtime-agnostic specification for defining cloud native applications; it allows developers to focus on the application instead of the complexities of a particular runtime infrastructure.  OAM provides the &lt;a href=&#34;https://github.com/oam-dev/spec&#34;&gt;specification&lt;/a&gt; for several file formats and rules for a runtime to interpret.  Verrazzano uses OAM to enable the definition of a composite application abstraction and makes OAM constructs available within a &lt;code&gt;VerrazzanoApplication&lt;/code&gt; YAML file.  Verrazzano provides the flexibility to combine what you want into a multicloud enablement. It uses the &lt;code&gt;VerrazzanoApplication&lt;/code&gt; as a means to encapsulate a set of components, scopes, and traits, and deploy them on a selected cluster.&lt;/p&gt;
&lt;p&gt;OAM&amp;rsquo;s workload concept makes it easy to use many different workload types.  Verrazzano includes specific workload types with special handling to deploy and manage those types, such as WebLogic, Coherence, and Helidon.  OAM&amp;rsquo;s flexibility lets you create a grouping that is managed as a unit, although each component can be scaled or updated independently.&lt;/p&gt;
&lt;h2 id=&#34;how-does-oam-work&#34;&gt;How does OAM work?&lt;/h2&gt;
&lt;p&gt;OAM has five core concepts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Workloads - Declarations of the kinds of resources supported by the platform and the OpenAPI schema for that resource.  Most Kubernetes CRDs can be exposed as workloads.  Standard Kubernetes resource types can also be used
(for example, Deployment, Service, Pod, ConfigMap).&lt;/li&gt;
&lt;li&gt;Components - Wrap a workload resource&amp;rsquo;s specification data within OAM specific metadata.&lt;/li&gt;
&lt;li&gt;Application Configurations - Describe a collection of components that comprise an application.  This is also where customization (such as, environmental) of each component is done.  Customization is achieved using scopes and traits.&lt;/li&gt;
&lt;li&gt;Scopes - Apply customization to several components.&lt;/li&gt;
&lt;li&gt;Traits - Apply customization to a single component.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;../../docs/concepts/oam-app.svg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Verrazzano in a Multicluster Environment</title>
      <link>/docs/concepts/verrazzanomulticluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/concepts/verrazzanomulticluster/</guid>
      <description>
        
        
        &lt;p&gt;Review the following key concepts to understand multicluster Verrazzano:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Admin cluster - A Kubernetes cluster that serves as the central management point for deploying and monitoring applications
in managed clusters.&lt;/li&gt;
&lt;li&gt;Managed clusters - A Kubernetes cluster that has the following characteristics:
&lt;ul&gt;
&lt;li&gt;It is registered with an admin cluster with a unique name.&lt;/li&gt;
&lt;li&gt;Verrazzano multicluster applications may be deployed to the managed cluster from the admin cluster.&lt;/li&gt;
&lt;li&gt;Logs and metrics for Verrazzano system components and Verrazzano multicluster applications deployed on the
managed cluster are viewable from the admin cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Verrazzano multicluster resources - Custom Kubernetes resources defined by Verrazzano.
&lt;ul&gt;
&lt;li&gt;Each multicluster resource serves as a wrapper for an underlying resource type.&lt;/li&gt;
&lt;li&gt;A multicluster resource allows the &lt;code&gt;placement&lt;/code&gt; of the underlying resource to be specified as a list of
names of the clusters in which the resource must be placed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more details, see &lt;a href=&#34;../../docs/applications/multicluster/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../docs/images/multicluster/MCIntro.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Verrazzano Projects</title>
      <link>/docs/concepts/verrazzanoproject/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/concepts/verrazzanoproject/</guid>
      <description>
        
        
        &lt;p&gt;A &lt;em&gt;project&lt;/em&gt; provides a way to group application namespaces that are owned or administered by the same user or
group of users. When creating a project, you can specify the &lt;em&gt;subjects:&lt;/em&gt; users, groups and/or service accounts, that are
to be granted access to the namespaces governed by the project. Two types of subjects may be specified:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project admins, who have both read and write access to the project&amp;rsquo;s namespaces.&lt;/li&gt;
&lt;li&gt;Project monitors, who have read-only access to the project&amp;rsquo;s namespaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information, see &lt;a href=&#34;../../docs/applications/projects/&#34;&gt;Projects&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>

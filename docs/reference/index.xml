<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Verrazzano Enterprise Container Platform â€“ Reference</title>
    <link>https://verrazzano.io/docs/reference/</link>
    <description>Recent content in Reference on Verrazzano Enterprise Container Platform</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://verrazzano.io/docs/reference/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Verrazzano Application Model</title>
      <link>https://verrazzano.io/docs/reference/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://verrazzano.io/docs/reference/model/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Important&lt;/h4&gt;
The details on this page are subject to change.
&lt;/div&gt;

&lt;p&gt;The Verrazzano Model (vm kubectl resource) is a Kubernetes Custom Resource Definition (CRD) that is added to the Verrazzano management cluster. This CRD describes a &amp;ldquo;Verrazzano Application,&amp;rdquo; which is made up of one or more components.  Components can be WebLogic domains, Coherence clusters, Helidon microservices, or other generic container workloads.  The model also defines connections between components, ingresses to an application, and connections to external services, such as a database or a REST endpoint. Conceptually, the model captures information about the application which does not vary based on where the application is deployed.  Then a Verrazzano Binding (vb kubectl resource) is used to map the Verrazzano Application defined in the model to the deployment environment. For example, the WebLogic domain X always talks to database Y, no matter how many times this application is deployed. In a particular instance or deployment of the application, for example, the &amp;ldquo;test&amp;rdquo; instance, there may be different credentials and a different URL to access the test version of Y database, but X always talks to Y. The application &lt;em&gt;&lt;strong&gt;model&lt;/strong&gt;&lt;/em&gt; must define a connection to the database, but the actual credentials and URL used when the application is deployed is defined in the &lt;em&gt;&lt;strong&gt;binding&lt;/strong&gt;&lt;/em&gt;. Bindings map the application to the environment.&lt;/p&gt;
&lt;p&gt;The combination of a model and binding produces an instance of an application.
Both the model and binding are meant to be sparse; they contain only the information that is needed to deploy the application.  Anything that Verrazzano can infer or use a default value for, can be omitted from these files.&lt;/p&gt;
&lt;h2 id=&#34;structure-of-the-verrazzanoapplicationmodel&#34;&gt;Structure of the &lt;code&gt;VerrazzanoApplicationModel&lt;/code&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;VerrazzanoApplicationModel
    name                                        Name of the model
    description                                 Description of the model
    []weblogicDomains
        -name                                   Name of the component; this is the name used within the application model only.
         adminPort                              External port number for the Administration Console
         t3Port                                 External port number for T3
         domainCRValues                         Domain CR values; you can provide valid Domain CR values accepted by the WebLogic Server Kubernetes Operator, with a few exceptions.
            domainUID                           WebLogic domain name
            domainHome                          Path to the WebLogic domain home in the image
            image                               Docker image to use for pods in the WebLogic domain
            logHome                             Path to the log home for the WebLogic domain
            logHomeEnabled                      Enables the WebLogic Server Kubernetes Operator to override the domain log location
            webLogicCredentialsSecret
                name                            Secret containing administrative credentials for the WebLogic domain
            imagePullSecrets
                name                            Name of the secret for pulling Docker images for the WebLogic domain
            clusters                            Optional list of clusters for which additional configuration is needed
                clusterName                     Name of the WebLogic cluster
                serverStartState                Desired start state for managed servers in the cluster: ADMIN or RUNNING (default)
                serverPod                       Configuration affecting server pods for WebLogic Server instances in the cluster
                  env
                    - name: JAVA_OPTIONS
                      value
                    - name: USER_MEM_ARGS
                      value
                    - name: WL_HOME
                      value
                    - name: MW_HOME
                      value
                replicas: 2
        -connections                            List of connections for the WebLogic domain
           []-rest                              Connections of type REST needed by the WebLogic domain
              target                            Name of the target component
              -environmentVariableForHost       DNS name of the target component (its Kubernetes service)
              -environmentVariableForPort       Port for the target component
            []-ingress
              -name                             Name of the ingress to connect to the domain
            []-database
              target                            Name of the database component defined in the model or `databasebinding` defined in the binding
              datasourceName                    JDBC data source name within the WebLogic domain configuration for the database
            []-coherence
              target                            Name of the target Coherence cluster (defined in the model)
              address                           Coherence cluster services address
    []-coherenceClusters
        - name                                  Name of component and Coherence cluster
          image
          imagePullSecrets
          cacheConfig
          pofConfig
          []-connections                         List of connections needed by the Coherence cluster
            []-rest                              Connections of type REST needed by the Coherence cluster
               target                            Name of the target REST connection
               -environmentVariableForHost       DNS name of the target component (its Kubernetes service)
               -environmentVariableForPort       Port for the target component
            []-ingress
               -name                             Name of the ingress to connect to the cluster. Ingress details are defined in the binding using this name.
            []-database
               target                            Name of the target database component defined in the model or `databasebinding` defined in the binding
            []-coherence
              target                             Name of the target Coherence cluster (defined in the model)
              address                            Coherence cluster services address
    []-helidonApplications
        name                                     Name of the component within the Verrazzano Model
        image                                    Docker `image:tag` that runs the application
        -imagePullSecret                         Name of the Kubernetes secret containing credentials for pulling the image
        []-connections                           List of connections needed by this application component
           []-rest                               Connections of type REST needed by the application
              target                             Name of the target component
              -environmentVariableForHost        DNS name of the target component (its Kubernetes service)
              -environmentVariableForPort        Port for the target component
           []-ingress
              -name                              Name of the ingress to connect to the application. Ingress details are defined in the binding.
              -match
           []-database
              target                             Name of the target database component defined in the model or `databasebinding` defined in the binding
           []-coherence
              target                             Name of the target Coherence cluster defined in the model
              address      

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For an example Verrazzano Model, see &lt;a href=&#34;https://github.com/verrazzano/examples/blob/master/bobs-books/yaml/demo-model.yaml&#34;&gt;demo-model&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the following additional documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WebLogic Server Kubernetes Operator Reference: &lt;a href=&#34;https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#domain-resource-spec-elements&#34;&gt;https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/domain-resource/#domain-resource-spec-elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Coherence Operator Reference: &lt;a href=&#34;https://oracle.github.io/coherence-operator/docs/2.1.1/#/clusters/010_introduction&#34;&gt;https://oracle.github.io/coherence-operator/docs/2.1.1/#/clusters/010_introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;weblogic-domain-components&#34;&gt;WebLogic Domain Components&lt;/h2&gt;
&lt;p&gt;WebLogic domain components in a Verrazzano Model represent the custom resource for the WebLogic domain that is managed by the WebLogic Server Kubernetes Operator. Because the operator is what manages the domain, CR options that the model can handle are acceptable as entries in the component within the model file.&lt;/p&gt;


&lt;div class=&#34;alert alert-notice&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Limitations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Verrazzano uses WebLogic Server Kubernetes Operator version 2.6. Any features or values added in later versions of the operator are not valid.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://oracle.github.io/weblogic-kubernetes-operator/userguide/managing-domains/choosing-a-model/&#34;&gt;&amp;ldquo;Domain in Image&amp;rdquo;&lt;/a&gt; is the only valid domain home strategy with Verrazzano in this early release. Future releases will include support for other domain home strategies.&lt;/li&gt;
&lt;li&gt;Domain configuration overrides are not supported in this early release of Verrazzano. If you use secrets or config maps to store configuration overrides, those overrides will not be applied and may cause other errors.&lt;/li&gt;
&lt;li&gt;JRF domains are not supported in this early release of Verrazzano. Restricted JRF is supported.&lt;/li&gt;
&lt;li&gt;Use of Oracle Platform Security Services is not supported in this early release.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;A WebLogic domain component must include the following items:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name&lt;/li&gt;
&lt;li&gt;domainCRValues
&lt;ul&gt;
&lt;li&gt;domainUID&lt;/li&gt;
&lt;li&gt;webLogicCredentialsSecret&lt;/li&gt;
&lt;li&gt;image&lt;/li&gt;
&lt;li&gt;imagePullSecret&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A WebLogic domain component typically includes the following items:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adminPort&lt;/li&gt;
&lt;li&gt;t3Port&lt;/li&gt;
&lt;li&gt;Clusters
&lt;ul&gt;
&lt;li&gt;Server Pod (e.g., server startup parameters)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Connections
&lt;ul&gt;
&lt;li&gt;Rest (outbound)&lt;/li&gt;
&lt;li&gt;Ingress&lt;/li&gt;
&lt;li&gt;Database&lt;/li&gt;
&lt;li&gt;Coherence&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a full list of valid CR values, see the WebLogic Server Kubernetes Operator repository at &lt;a href=&#34;https://github.com/oracle/weblogic-kubernetes-operator/blob/master/docs/domains/Domain.md&#34;&gt;https://github.com/oracle/weblogic-kubernetes-operator/blob/master/docs/domains/Domain.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;coherence-cluster-components&#34;&gt;Coherence Cluster Components&lt;/h2&gt;
&lt;p&gt;Note that support for Coherence is an experimental feature in this release of Verrazzano.&lt;/p&gt;
&lt;p&gt;Verrazzano relies on version 2.1.1 of the &lt;a href=&#34;https://github.com/oracle/coherence-operator&#34;&gt;Coherence Operator&lt;/a&gt;.  For the Coherence clusters section of the Verrazzano Model, Coherence custom resource values are defined in Verrazzano and then converted to a custom resource that the Coherence operator can interpret.&lt;/p&gt;
&lt;p&gt;A Coherence cluster component must have the following item:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coherence cluster components typically have the following items:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;image&lt;/li&gt;
&lt;li&gt;imagePullSecrets&lt;/li&gt;
&lt;li&gt;cacheConfig&lt;/li&gt;
&lt;li&gt;pofConfig&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;helidon-application-components&#34;&gt;Helidon Application Components&lt;/h2&gt;
&lt;p&gt;Helidon applications must have the following items defined in the model file:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;image&lt;/li&gt;
&lt;li&gt;imagePullSecrets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Helidon applications typically have connections defined as part of the components specification, including REST, database, Coherence, and ingress connections as described for the previous component types.&lt;/p&gt;
&lt;p&gt;Helidon applications are managed by the Verrazzano Helidon App Operator. See the source for the operator for the list of additional configuration properties available for Helidon applications.&lt;/p&gt;
&lt;h2 id=&#34;generic-container-components&#34;&gt;Generic Container Components&lt;/h2&gt;
&lt;p&gt;Coming soon.&lt;/p&gt;
&lt;h2 id=&#34;connections&#34;&gt;Connections&lt;/h2&gt;
&lt;p&gt;Within a Verrazzano Model, you can define the following connection types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;li&gt;Coherence&lt;/li&gt;
&lt;li&gt;Database&lt;/li&gt;
&lt;li&gt;Ingress&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;rest-connections&#34;&gt;REST Connections&lt;/h3&gt;
&lt;p&gt;You can define a REST connection from one component in the model to another component in the same model. When you define a REST connection between components, you can then define variable names that will be provided in the Verrazzano Binding. Verrazzano also sets up network policies that enable the components to communicate in the service mesh over TLS.&lt;/p&gt;
&lt;p&gt;Settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Target: The name of the target component within the same model&lt;/li&gt;
&lt;li&gt;EnvironmentVariableForHost: The DNS name or IP address of the target component (its Kubernetes service)&lt;/li&gt;
&lt;li&gt;EnvironmentVariableForPort: The port for the target component&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;coherence-connections&#34;&gt;Coherence Connections&lt;/h3&gt;
&lt;p&gt;You can define a Coherence connection for a component that needs to communicate with a Coherence cluster. The Coherence cluster must also be defined in the same Verrazzano Model.&lt;/p&gt;
&lt;p&gt;Settings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Target: The name of the target Coherence component&lt;/li&gt;
&lt;li&gt;Address: The coherence cluster services address&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;database-connections&#34;&gt;Database Connections&lt;/h3&gt;
&lt;p&gt;In the Verrazzano Model, you can define connections to external databases. These connections then become available to modify in the Verrazzano Binding. That is, you can identify a necessary database connection in the model, and then define credentials and the URL for the database in the binding. Verrazzano operators then handle the database connection accordingly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Target: name of the database to specify in a Verrazzano Binding. That is, in the binding, you will define a database entry that the component will connect to.&lt;/li&gt;
&lt;li&gt;DatasourceName: The name of the data source within the WebLogic configuration that will map to the connected database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;related-kubectl-commands&#34;&gt;Related kubectl Commands&lt;/h2&gt;
&lt;p&gt;TBD&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Verrazzano Application Binding</title>
      <link>https://verrazzano.io/docs/reference/binding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://verrazzano.io/docs/reference/binding/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Important&lt;/h4&gt;
The details on this page are subject to change.
&lt;/div&gt;

&lt;p&gt;The Verrazzano Application Binding (vb Kubernetes object type) maps a Verrazzano Application Model to an environment. The binding defines placement of the components, environment-specific aspects of a component, and connection details for the connections defined in the model.&lt;/p&gt;
&lt;p&gt;Adding a binding to the Verrazzano instance results in a running application: Namespaces are created in the specified clusters, components are deployed in those namespaces, and ingresses, network policies, and routing rules are created in the service mesh. Behind the scenes, Verrazzano also copies secrets where necessary, creates custom resources, and deploys operators for the various component types in the application model.&lt;/p&gt;
&lt;p&gt;There can be zero to many bindings to every model; a binding can refer to one model only.&lt;/p&gt;
&lt;h3 id=&#34;verrazzanoapplicationbinding&#34;&gt;VerrazzanoApplicationBinding&lt;/h3&gt;
&lt;p&gt;This CRD is used to describe a &amp;ldquo;binding&amp;rdquo;.  A binding provides environment and instance-specific
information about an application, for example, information that would be different in each
deployment/instance.  A good example would be credentials and URLs used to connect to a
database.  Bindings refer to (and extend) &amp;ldquo;models&amp;rdquo; (see below).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: A hyphen prefix denotes an optional element.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kind: VerrazzanoBinding
metadata:
  name:                        Name of the binding
  namespace:                   Namespace for the binding
spec:
    description                Description of the binding
    modelName                  Reference to a Verrazzano application model
    []-weblogicBindings
        name                   Name of the component to bind, as defined in the model
        replicas               Initial number of managed server instances to run
    []-coherenceBindings
        name                   Name of the component to bind, as defined in the model
        -replicas              Initial number of members of the Coherence cluster
    []-helidonBindings
        name                   Name of the component to bind, as defined in the model
        -replicas              Initial number of replicas for a Helidon application
    []-databaseBindings
        name                   Name of the database component in the model, or of the target in a database connection definition in the model
        credentials            Name of the Kubernetes secret that contains the database credentials
        url                    Database connect string (JDBC URL)
    []-ingressBindings
        name                   Name of the ingress connection as defined in the model
        dnsName                DNS name for the ingress
    []-placement               List of &amp;quot;placements&amp;quot; of model components
        name                   Name of the Kubernetes cluster as defined in the Verrazzano environment
        []namespaces           
            name               Name of the namespace in which to place the components
            []components       List of components to place in the namespace on that cluster
                name           

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is an example of a &lt;code&gt;VerrazzanoApplicationBinding&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;verrazzano.io/v1beta1&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;VerrazzanoBinding&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bobs-books-binding&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;namespace&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;default&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;description&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Bob&amp;#39;s Books binding&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;modelName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bobs-books-model&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;coherenceBindings&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bobbys-coherence&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;roberts-coherence&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;helidonBindings&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;roberts-helidon-stock-application&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bobbys-helidon-stock-application&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;weblogicBindings&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bobbys-front-end&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bobs-bookstore&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;replicas&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;databaseBindings&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;mysql&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;credentials&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;mysql-credentials&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;jdbc:mysql://mysql.bob.svc.default.local:3306/books&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;placement&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;local&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;namespaces&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bobby&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;components&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bobbys-coherence&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bobbys-front-end&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bobbys-helidon-stock-application&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;robert&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;components&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;roberts-helidon-stock-application&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;roberts-coherence&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bob&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;components&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;            &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;bobs-bookstore&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ingressBindings&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bobbys-ingress&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dnsName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bobs-ingress&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dnsName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;roberts-ingress&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;dnsName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;database-bindings&#34;&gt;Database Bindings&lt;/h3&gt;
&lt;p&gt;The Verrazzano Model allows you to define connections to external databases.  You can then set the credentials and the URL for the database in the Verrazzano Binding.  The database binding has the following fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name: The name of the database binding. A database connection in the model is linked by its &lt;code&gt;target&lt;/code&gt; field to the database binding &lt;code&gt;name&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Credentials: The credentials to be used to connect to the database.&lt;/li&gt;
&lt;li&gt;URL: The URL for the database connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If a WebLogic component specifies a database connection that has a corresponding &lt;code&gt;databaseBinding&lt;/code&gt; then the Verrazzano operators will:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Copy the secret specified in the &lt;code&gt;databaseBinding&lt;/code&gt; to the namespace of the WebLogic domain.&lt;/li&gt;
&lt;li&gt;Create a config map in the namespace of the WebLogic domain to specify overrides for the URL and secret.  These configuration overrides (also called situational configuration) are used to customize the database configuration for the WebLogic domain.&lt;/li&gt;
&lt;li&gt;Specify the override config map when the WebLogic domain is created.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example, if a &lt;code&gt;weblogicDomain&lt;/code&gt; in the model has a database connection&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;connections:
    - database:
      - target: mysql
       datasourceName: books
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and the binding has a database binding&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; databaseBindings:
  - credentials: mysqlsecret
   name: mysql
   url: jdbc:mysql://mysql.default.svc.cluster.local:3306/books
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then the secret &lt;code&gt;mysqlsecret&lt;/code&gt; will be copied from the default namespace to the namespace specified in the binding placement for the WebLogic domain. The URL will be added to the secret with the value from the database binding.  Note that the secret specified in the binding must exist in the default namespace before the model and binding are applied.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
data:
  password: xxxxxxxxx
  url: amRiYzpteXNxbDovL215c3FsLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWw6MzMwNi9ib29rcw==
  username: xxxxxxxx
kind: Secret
metadata:
  labels:
    weblogic.domainUID: bobs-bookstore
  name: mysqlsecret
  namespace: bob
type: Opaque
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A config map for override values will be created in the WebLogic domain namespace with values from the secret.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
data:
  jdbc-books.xml: |
  &amp;lt;?xml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;?&amp;gt;
  &amp;lt;jdbc-data-source xmlns=&amp;quot;http://xmlns.oracle.com/weblogic/jdbc-data-source&amp;quot;
                    xmlns:f=&amp;quot;http://xmlns.oracle.com/weblogic/jdbc-data-source-fragment&amp;quot;
                    xmlns:s=&amp;quot;http://xmlns.oracle.com/weblogic/situational-config&amp;quot;&amp;gt;
    &amp;lt;name&amp;gt;books&amp;lt;/name&amp;gt;
    &amp;lt;jdbc-driver-params&amp;gt;
      &amp;lt;url f:combine-mode=&amp;quot;replace&amp;quot;&amp;gt;jdbc:mysql://mysql:3306/books&amp;lt;/url&amp;gt;
      &amp;lt;properties&amp;gt;
         &amp;lt;property&amp;gt;
            &amp;lt;name&amp;gt;user&amp;lt;/name&amp;gt;
            &amp;lt;value f:combine-mode=&amp;quot;replace&amp;quot;&amp;gt;${secret:mysql-credentials.username}&amp;lt;/value&amp;gt;
         &amp;lt;/property&amp;gt;
      &amp;lt;/properties&amp;gt;
      &amp;lt;password-encrypted f:combine-mode=&amp;quot;replace&amp;quot;&amp;gt;${secret:mysql-credentials.password:encrypt}&amp;lt;/password-encrypted&amp;gt;
    &amp;lt;/jdbc-driver-params&amp;gt;
  &amp;lt;/jdbc-data-source&amp;gt;
  version.txt: &amp;quot;2.0&amp;quot;
kind: ConfigMap
metadata:
  labels:
    weblogic.domainUID: bobs-bookstore
  name: jdbccm
  namespace: bob
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The overrides and override secrets are set when the WebLogic domain is created.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: weblogic.oracle/v7
kind: Domain
...
  configOverrideSecrets:
  - mysqlsecret
  configOverrides: jdbccm
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
  </channel>
</rss>
